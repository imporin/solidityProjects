
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

// This is class that describes you smart contract.
contract DeviceToken {
    
    struct Token {
        string model;
        uint serialNum;
        string typeName;
    }

    Token[] tokensArr;
    
    mapping (uint => uint) tokenToOwner;

    mapping (uint=>uint) tokenPrice;

    modifier uniqueName(string model) {
        require(isUnique(model), 305, "Model name should be unique");
        _;
    }

    modifier isOwner(uint tokenId)
    {
        require(msg.pubkey() == tokenToOwner[tokenId], 101);
        _;
    }

    function isUnique(string model) private inline returns (bool)
    {
        bool flag = true;
        for(uint i = 0; i < tokensArr.length; i++)
            if(model == tokensArr[i].model) 
                flag = false;
        return flag;
    }

    function createToken(string model, uint serialNum, string typeName) public uniqueName(model){
        tvm.accept();

        tokensArr.push(Token(model,serialNum,typeName));
        uint keyAsLastNum = tokensArr.length - 1;
        tokenToOwner[keyAsLastNum] = msg.pubkey();
        
    }

    function getTokenOwner(uint tokenId) public view returns (uint)
    {
        return tokenToOwner[tokenId];
    }
    
    function getTokenInfo(uint tokenId) public view returns (string tokenModel, uint tokenSerialNum, string tokenTypeName)
    {
        //tvm.accept();
        tokenModel = tokensArr[tokenId].model;
        tokenSerialNum = tokensArr[tokenId].serialNum;
        tokenTypeName = tokensArr[tokenId].typeName;
    }

    function changeOwner(uint tokenId, uint pubKeyOfNewOwner) public isOwner(tokenId){
        tvm.accept();
        tokenToOwner[tokenId] = pubKeyOfNewOwner;
    }

    function changeSerialNum(uint tokenId, uint serialNum) public isOwner(tokenId){
        tvm.accept();
        tokensArr[tokenId].serialNum = serialNum;
    }

    function changeTypeName(uint tokenId, string typeName) public isOwner(tokenId){
        tvm.accept();
        tokensArr[tokenId].typeName = typeName;
    }

    function putUpForSale(uint tokenId, uint price) public isOwner(tokenId){
        tvm.accept();
        tokenPrice[tokenId] = price;
    }

}
